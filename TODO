# - Update scraping function

# - Only add new jobs to database

# - node-cron

# - Implement auto scraping using node-cron packages

# - Error-handling in pageScraperController

# - If no new item added to stack

# - If error thrown when getting single job detail

# - Make a simple UI with Google Map API (React)

# - Make a sidebar for PC and mobile

# - Store image on Cloudinary

# - Update jobValidate to put company name instead of the scraped picture name e.g picture.png to company.png

# - Upload image inside jobValidate

# - Assign the returned link to companyLogo property and save to database

# - Test Error-handling while scraping company logo image in scrape_function.

# - Add JobSearchForm component to the same section as JobContainer component in Sidebar component

# - Put JobContainer, PaginationBtn to new component to seperate from Breadcrumb and JobSearchForm component.

# - Make a simple card for jobs when searching for jobs

# - Integrate Google Map API to client

# - Fetch job geometries in nodejs runtime (backend) with node-fetch module.

# - Handle error while fetching for job geometries.

# - Delete cloudinary assets if failed to fetch geometry

# - Error handling deleteCloudinaryAssets

# - Build custom Google Map Marker that show job details while hovering on it.

- Style custom Google Map Marker

- Enable Billing for Google Map API when deploying for production
  - https://developers.google.com/maps/documentation/javascript/cloud-setup#console
